[debug] [2025-05-27T08:04:57.717Z] ----------------------------------------------------------------------
[debug] [2025-05-27T08:04:57.757Z] Command:       /nix/store/rbdrkcs5kkwpalxcd7c6bnm33lk2955n-nodejs-20.19.0/bin/node /nix/store/x1y0l2xj62jgmz6csprhhqzibvdggdpk-firebase-tools-14.3.1/lib/node_modules/firebase-tools/lib/bin/firebase.js use --add
[debug] [2025-05-27T08:04:57.761Z] CLI Version:   14.3.1
[debug] [2025-05-27T08:04:57.763Z] Platform:      linux
[debug] [2025-05-27T08:04:57.767Z] Node Version:  v20.19.0
[debug] [2025-05-27T08:04:57.767Z] Time:          Tue May 27 2025 08:04:57 GMT+0000 (Coordinated Universal Time)
[debug] [2025-05-27T08:04:57.770Z] ----------------------------------------------------------------------
[debug] 
[debug] [2025-05-27T08:04:59.478Z] > command requires scopes: ["email","openid","https://www.googleapis.com/auth/cloudplatformprojects.readonly","https://www.googleapis.com/auth/firebase","https://www.googleapis.com/auth/cloud-platform"]
[debug] [2025-05-27T08:04:59.480Z] > authorizing via signed-in user (aliadnan425@gmail.com)
[debug] [2025-05-27T08:04:59.487Z] No OAuth tokens found
[debug] [2025-05-27T08:04:59.488Z] No OAuth tokens found
[debug] [2025-05-27T08:04:59.491Z] > command requires scopes: ["email","openid","https://www.googleapis.com/auth/cloudplatformprojects.readonly","https://www.googleapis.com/auth/firebase","https://www.googleapis.com/auth/cloud-platform"]
[debug] [2025-05-27T08:04:59.491Z] > authorizing via signed-in user (aliadnan425@gmail.com)
[debug] [2025-05-27T08:04:59.501Z] >>> [apiv2][query] GET https://firebase.googleapis.com/v1beta1/projects pageSize=1000
[debug] [2025-05-27T08:05:00.303Z] <<< [apiv2][status] GET https://firebase.googleapis.com/v1beta1/projects 200
[debug] [2025-05-27T08:05:00.307Z] <<< [apiv2][body] GET https://firebase.googleapis.com/v1beta1/projects [omitted]
[debug] [2025-05-28T08:39:03.420Z] ----------------------------------------------------------------------
[debug] [2025-05-28T08:39:03.431Z] Command:       /nix/store/rbdrkcs5kkwpalxcd7c6bnm33lk2955n-nodejs-20.19.0/bin/node /nix/store/x1y0l2xj62jgmz6csprhhqzibvdggdpk-firebase-tools-14.3.1/lib/node_modules/firebase-tools/lib/bin/firebase.js emulators:start --project=demo-app --only=auth,firestore
[debug] [2025-05-28T08:39:03.434Z] CLI Version:   14.3.1
[debug] [2025-05-28T08:39:03.434Z] Platform:      linux
[debug] [2025-05-28T08:39:03.435Z] Node Version:  v20.19.0
[debug] [2025-05-28T08:39:03.435Z] Time:          Wed May 28 2025 08:39:03 GMT+0000 (Coordinated Universal Time)
[debug] [2025-05-28T08:39:03.435Z] ----------------------------------------------------------------------
[debug] 
[debug] [2025-05-28T08:39:03.444Z] >>> [apiv2][query] GET https://firebase-public.firebaseio.com/cli.json [none]
[debug] [2025-05-28T08:39:04.801Z] <<< [apiv2][status] GET https://firebase-public.firebaseio.com/cli.json 200
[debug] [2025-05-28T08:39:04.802Z] <<< [apiv2][body] GET https://firebase-public.firebaseio.com/cli.json {"cloudBuildErrorAfter":1594252800000,"cloudBuildWarnAfter":1590019200000,"defaultNode10After":1594252800000,"minVersion":"3.0.5","node8DeploysDisabledAfter":1613390400000,"node8RuntimeDisabledAfter":1615809600000,"node8WarnAfter":1600128000000}
[debug] [2025-05-28T08:39:05.369Z] openjdk version "21.0.5" 2024-10-15
OpenJDK Runtime Environment (build 21.0.5+1-nixos)
OpenJDK 64-Bit Server VM (build 21.0.5+1-nixos, mixed mode, sharing)

[debug] [2025-05-28T08:39:05.419Z] Parsed Java major version: 21
[info] i  emulators: Starting emulators: firestore {"metadata":{"emulator":{"name":"hub"},"message":"Starting emulators: firestore"}}
[info] i  emulators: Detected demo project ID "demo-app", emulated services will use a demo configuration and attempts to access non-emulated services for this project will fail. {"metadata":{"emulator":{"name":"hub"},"message":"Detected demo project ID \"demo-app\", emulated services will use a demo configuration and attempts to access non-emulated services for this project will fail."}}
[warn] ⚠  auth: Not starting the auth emulator, make sure you have run firebase init. {"metadata":{"emulator":{"name":"auth"},"message":"Not starting the auth emulator, make sure you have run firebase init."}}
[warn] ⚠  hub: Error when trying to check port 4400 on ::1: Error: listen EADDRNOTAVAIL: address not available ::1:4400 {"metadata":{"emulator":{"name":"hub"},"message":"Error when trying to check port 4400 on ::1: Error: listen EADDRNOTAVAIL: address not available ::1:4400"}}
[warn] ⚠  hub: Port 4400 is available on 127.0.0.1 but not ::1. This may cause issues with some clients. {"metadata":{"emulator":{"name":"hub"},"message":"Port 4400 is available on 127.0.0.1 but not ::1. This may cause issues with some clients."}}
[warn] ⚠  hub: If you encounter connectivity issues, consider switching to a different port or explicitly specifying "host": "<ip address>" instead of hostname in firebase.json {"metadata":{"emulator":{"name":"hub"},"message":"If you encounter connectivity issues, consider switching to a different port or explicitly specifying \"host\": \"<ip address>\" instead of hostname in firebase.json"}}
[warn] ⚠  ui: Error when trying to check port 4000 on ::1: Error: listen EADDRNOTAVAIL: address not available ::1:4000 {"metadata":{"emulator":{"name":"ui"},"message":"Error when trying to check port 4000 on ::1: Error: listen EADDRNOTAVAIL: address not available ::1:4000"}}
[warn] ⚠  ui: Port 4000 is available on 127.0.0.1 but not ::1. This may cause issues with some clients. {"metadata":{"emulator":{"name":"ui"},"message":"Port 4000 is available on 127.0.0.1 but not ::1. This may cause issues with some clients."}}
[warn] ⚠  ui: If you encounter connectivity issues, consider switching to a different port or explicitly specifying "host": "<ip address>" instead of hostname in firebase.json {"metadata":{"emulator":{"name":"ui"},"message":"If you encounter connectivity issues, consider switching to a different port or explicitly specifying \"host\": \"<ip address>\" instead of hostname in firebase.json"}}
[warn] ⚠  logging: Error when trying to check port 4500 on ::1: Error: listen EADDRNOTAVAIL: address not available ::1:4500 {"metadata":{"emulator":{"name":"logging"},"message":"Error when trying to check port 4500 on ::1: Error: listen EADDRNOTAVAIL: address not available ::1:4500"}}
[warn] ⚠  logging: Port 4500 is available on 127.0.0.1 but not ::1. This may cause issues with some clients. {"metadata":{"emulator":{"name":"logging"},"message":"Port 4500 is available on 127.0.0.1 but not ::1. This may cause issues with some clients."}}
[warn] ⚠  logging: If you encounter connectivity issues, consider switching to a different port or explicitly specifying "host": "<ip address>" instead of hostname in firebase.json {"metadata":{"emulator":{"name":"logging"},"message":"If you encounter connectivity issues, consider switching to a different port or explicitly specifying \"host\": \"<ip address>\" instead of hostname in firebase.json"}}
[warn] ⚠  firestore: Error when trying to check port 8080 on ::1: Error: listen EADDRNOTAVAIL: address not available ::1:8080 {"metadata":{"emulator":{"name":"firestore"},"message":"Error when trying to check port 8080 on ::1: Error: listen EADDRNOTAVAIL: address not available ::1:8080"}}
[warn] ⚠  firestore: Port 8080 is available on 127.0.0.1 but not ::1. This may cause issues with some clients. {"metadata":{"emulator":{"name":"firestore"},"message":"Port 8080 is available on 127.0.0.1 but not ::1. This may cause issues with some clients."}}
[warn] ⚠  firestore: If you encounter connectivity issues, consider switching to a different port or explicitly specifying "host": "<ip address>" instead of hostname in firebase.json {"metadata":{"emulator":{"name":"firestore"},"message":"If you encounter connectivity issues, consider switching to a different port or explicitly specifying \"host\": \"<ip address>\" instead of hostname in firebase.json"}}
[warn] ⚠  firestore.websocket: Error when trying to check port 9150 on ::1: Error: listen EADDRNOTAVAIL: address not available ::1:9150 {"metadata":{"emulator":{"name":"firestore"},"message":"Error when trying to check port 9150 on ::1: Error: listen EADDRNOTAVAIL: address not available ::1:9150"}}
[warn] ⚠  firestore: Port 9150 is available on 127.0.0.1 but not ::1. This may cause issues with some clients. {"metadata":{"emulator":{"name":"firestore"},"message":"Port 9150 is available on 127.0.0.1 but not ::1. This may cause issues with some clients."}}
[warn] ⚠  firestore: If you encounter connectivity issues, consider switching to a different port or explicitly specifying "host": "<ip address>" instead of hostname in firebase.json {"metadata":{"emulator":{"name":"firestore"},"message":"If you encounter connectivity issues, consider switching to a different port or explicitly specifying \"host\": \"<ip address>\" instead of hostname in firebase.json"}}
[debug] [2025-05-28T08:39:05.431Z] assigned listening specs for emulators {"user":{"hub":[{"address":"127.0.0.1","family":"IPv4","port":4400}],"ui":[{"address":"127.0.0.1","family":"IPv4","port":4000}],"logging":[{"address":"127.0.0.1","family":"IPv4","port":4500}],"firestore":[{"address":"127.0.0.1","family":"IPv4","port":8080}],"firestore.websocket":[{"address":"127.0.0.1","family":"IPv4","port":9150}]},"metadata":{"message":"assigned listening specs for emulators"}}
[debug] [2025-05-28T08:39:05.436Z] [hub] writing locator at /tmp/hub-demo-app.json
[debug] [2025-05-28T08:39:05.456Z] Ignoring unsupported arg: auto_download {"metadata":{"emulator":{"name":"firestore"},"message":"Ignoring unsupported arg: auto_download"}}
[debug] [2025-05-28T08:39:05.457Z] Ignoring unsupported arg: single_project_mode_error {"metadata":{"emulator":{"name":"firestore"},"message":"Ignoring unsupported arg: single_project_mode_error"}}
[debug] [2025-05-28T08:39:05.457Z] Starting Firestore Emulator with command {"binary":"java","args":["-Dgoogle.cloud_firestore.debug_log_level=FINE","-Duser.language=en","-jar","/home/user/.cache/firebase/emulators/cloud-firestore-emulator-v1.19.8.jar","--host","127.0.0.1","--port",8080,"--websocket_port",9150,"--project_id","demo-app","--rules","/home/user/studio/firestore.rules","--single_project_mode",true],"optionalArgs":["port","webchannel_port","host","rules","websocket_port","functions_emulator","seed_from_export","project_id","single_project_mode"],"joinArgs":false,"shell":false,"port":8080} {"metadata":{"emulator":{"name":"firestore"},"message":"Starting Firestore Emulator with command {\"binary\":\"java\",\"args\":[\"-Dgoogle.cloud_firestore.debug_log_level=FINE\",\"-Duser.language=en\",\"-jar\",\"/home/user/.cache/firebase/emulators/cloud-firestore-emulator-v1.19.8.jar\",\"--host\",\"127.0.0.1\",\"--port\",8080,\"--websocket_port\",9150,\"--project_id\",\"demo-app\",\"--rules\",\"/home/user/studio/firestore.rules\",\"--single_project_mode\",true],\"optionalArgs\":[\"port\",\"webchannel_port\",\"host\",\"rules\",\"websocket_port\",\"functions_emulator\",\"seed_from_export\",\"project_id\",\"single_project_mode\"],\"joinArgs\":false,\"shell\":false,\"port\":8080}"}}
[info] i  firestore: Firestore Emulator logging to firestore-debug.log {"metadata":{"emulator":{"name":"firestore"},"message":"Firestore Emulator logging to firestore-debug.log"}}
[debug] [2025-05-28T08:39:14.656Z] May 28, 2025 8:39:14 AM com.google.cloud.datastore.emulator.firestore.websocket.WebSocketServer start
INFO: Started WebSocket server on ws://127.0.0.1:9150
 {"metadata":{"emulator":{"name":"firestore"},"message":"May 28, 2025 8:39:14 AM com.google.cloud.datastore.emulator.firestore.websocket.WebSocketServer start\nINFO: Started WebSocket server on ws://127.0.0.1:9150\n"}}
[debug] [2025-05-28T08:39:14.805Z] API endpoint: http:// {"metadata":{"emulator":{"name":"firestore"},"message":"API endpoint: http://"}}
[debug] [2025-05-28T08:39:14.806Z] 127.0.0.1:8080
If you are using a library that supports the FIRESTORE_EMULATOR_HOST environment variable, run:

   export FIRESTORE_EMULATOR_HOST=127.0.0.1:8080

If you are running a Firestore in Datastore Mode project, run:

   export DATASTORE_EMULATOR_HOST=127.0.0.1:8080

Note: Support for Datastore Mode is in preview. If you encounter any bugs please file at https://github.com/firebase/firebase-tools/issues.
Dev App Server is now running.

 {"metadata":{"emulator":{"name":"firestore"},"message":"127.0.0.1:8080\nIf you are using a library that supports the FIRESTORE_EMULATOR_HOST environment variable, run:\n\n   export FIRESTORE_EMULATOR_HOST=127.0.0.1:8080\n\nIf you are running a Firestore in Datastore Mode project, run:\n\n   export DATASTORE_EMULATOR_HOST=127.0.0.1:8080\n\nNote: Support for Datastore Mode is in preview. If you encounter any bugs please file at https://github.com/firebase/firebase-tools/issues.\nDev App Server is now running.\n\n"}}
[info] ✔  firestore: Firestore Emulator UI websocket is running on 9150. {"metadata":{"emulator":{"name":"firestore"},"message":"Firestore Emulator UI websocket is running on 9150."}}
[debug] [2025-05-28T08:39:15.006Z] Could not find VSCode notification endpoint: FetchError: request to http://localhost:40001/vscode/notify failed, reason: connect ECONNREFUSED 127.0.0.1:40001. If you are not running the Firebase Data Connect VSCode extension, this is expected and not an issue.
[info] 
┌─────────────────────────────────────────────────────────────┐
│ ✔  All emulators ready! It is now safe to connect your app. │
│ i  View Emulator UI at http://127.0.0.1:4000/               │
└─────────────────────────────────────────────────────────────┘

┌───────────┬────────────────┬─────────────────────────────────┐
│ Emulator  │ Host:Port      │ View in Emulator UI             │
├───────────┼────────────────┼─────────────────────────────────┤
│ Firestore │ 127.0.0.1:8080 │ http://127.0.0.1:4000/firestore │
└───────────┴────────────────┴─────────────────────────────────┘
  Emulator Hub host: 127.0.0.1 port: 4400
  Other reserved ports: 4500, 9150

Issues? Report them at https://github.com/firebase/firebase-tools/issues and attach the *-debug.log files.
 
[info] i  firestore: Change detected, updating rules... 
[debug] [2025-05-28T08:39:16.080Z] >>> [apiv2][query] PUT http://127.0.0.1:8080/emulator/v1/projects/demo-app:securityRules [none]
[debug] [2025-05-28T08:39:16.084Z] >>> [apiv2][body] PUT http://127.0.0.1:8080/emulator/v1/projects/demo-app:securityRules {"ignore_errors":true,"rules":{"files":[{"name":"security.rules","content":"rules_version = '2';\nservice cloud.firestore {\n  match /databases/{database}/documents {\n    \n    // Helper function to check if the user is a superadmin\n    function isSuperAdmin() {\n      return request.auth != null &&\n             exists(/databases/$(database)/documents/superadmins/$(request.auth.uid));\n    }\n\n    // Helper function to check if the user is an admin\n    function isAdmin() {\n      return request.auth != null &&\n             exists(/databases/$(database)/documents/admins/$(request.auth.uid));\n    }\n\n    // Validation function for admin data\n    function validateAdminData() {\n      let data = request.resource.data;\n      return data.keys().hasAll([\n               'name', 'email', 'mobile', 'address', 'company', 'department',\n               'designation', 'availability', 'selectedCompany', 'createdAt'\n             ]) &&\n             data.name is string && data.name.size() >= 2 && data.name.size() <= 100 &&\n             data.email is string && data.email.size() > 0 && data.email.size() <= 100 &&\n             data.email.matches('^[^@]+@[^@]+\\\\.[^@]+$') &&\n             data.mobile is string && data.mobile.size() > 0 && data.mobile.size() <= 15 &&\n             data.address is string && data.address.size() > 0 && data.address.size() <= 500 &&\n             data.company is string && data.company.size() > 0 && data.company.size() <= 100 &&\n             data.department is string && data.department.size() > 0 && data.department.size() <= 100 &&\n             data.designation is string && data.designation.size() > 0 && data.designation.size() <= 100 &&\n             data.availability is string && data.availability.size() > 0 && data.availability.size() <= 50 &&\n             data.selectedCompany is string && (data.selectedCompany == 'Tirupati Industrial Services' || data.selectedCompany == 'Maxline Facilities') &&\n             data.createdAt is timestamp &&\n             (!data.keys().hasAny(['lastLogin']) || data.lastLogin == null || data.lastLogin is timestamp) &&\n             (!data.keys().hasAny(['last_updated']) || data.last_updated is timestamp) &&\n             (!data.keys().hasAny(['profile_pic_base64']) || data.profile_pic_base64 is string);\n    }\n\n    // Superadmins collection\n    match /superadmins/{userId} {\n      allow read: if request.auth != null && request.auth.uid == userId;\n      allow write: if request.auth != null && request.auth.uid == userId && isSuperAdmin();\n      allow create: if request.auth != null &&\n                       request.auth.token.email == 'superadmin@tiru.com' &&\n                       request.resource.data.email == request.auth.token.email &&\n                       request.resource.data.keys().hasAll(['name', 'email', 'mobile', 'address', 'createdAt']) &&\n                       request.resource.data.name is string &&\n                       request.resource.data.email is string &&\n                       request.resource.data.mobile is string &&\n                       request.resource.data.address is string &&\n                       request.resource.data.createdAt is timestamp;\n    }\n\n    // Admins collection\n    match /admins/{adminId} {\n      // SuperAdmin permissions\n      allow read: if isSuperAdmin();\n      allow create: if isSuperAdmin() && validateAdminData();\n      allow update: if isSuperAdmin() && validateAdminData();\n      allow delete: if isSuperAdmin();\n\n      // Admin permissions\n      allow read: if request.auth != null && request.auth.uid == adminId && isAdmin();\n      allow update: if request.auth != null && request.auth.uid == adminId && isAdmin() && validateAdminData();\n      allow delete: if false; // Explicitly deny delete for non-SuperAdmins\n    }\n\n    // KYC collection\n    match /kyc/{kycId} {\n      allow create: if isAdmin() &&\n                       request.resource.data.keys().hasAll([\n                         'personal_info', 'professional_info', 'bank_info', 'remarks',\n                         'created_at', 'verified', 'verified_by', 'documents', 'user_id'\n                       ]) &&\n                       request.resource.data.user_id == request.auth.uid &&\n                       request.resource.data.created_at is timestamp &&\n                       request.resource.data.verified is bool &&\n                       request.resource.data.verified_by is string &&\n                       request.resource.data.remarks is string &&\n                       request.resource.data.documents is list &&\n                       request.resource.data.personal_info is map &&\n                       request.resource.data.personal_info.keys().hasAll([\n                         'prefix', 'name', 'gender', 'marital_status', 'father_husband_name',\n                         'date_of_birth', 'age', 'email', 'phone', 'alternative_phone',\n                         'address', 'pincode', 'state'\n                       ]) &&\n                       request.resource.data.personal_info.prefix is string &&\n                       request.resource.data.personal_info.name is string &&\n                       request.resource.data.personal_info.gender is string &&\n                       request.resource.data.personal_info.marital_status is string &&\n                       request.resource.data.personal_info.father_husband_name is string &&\n                       request.resource.data.personal_info.date_of_birth is string &&\n                       request.resource.data.personal_info.age is string &&\n                       request.resource.data.personal_info.email is string &&\n                       request.resource.data.personal_info.email.matches('^[^@]+@[^@]+\\\\.[^@]+$') &&\n                       request.resource.data.personal_info.phone is string &&\n                       request.resource.data.personal_info.phone.matches('^\\\\d{10}$') &&\n                       request.resource.data.personal_info.alternative_phone is string &&\n                       (request.resource.data.personal_info.alternative_phone == '' ||\n                        request.resource.data.personal_info.alternative_phone.matches('^\\\\d{10}$')) &&\n                       request.resource.data.personal_info.address is string &&\n                       request.resource.data.personal_info.pincode is string &&\n                       request.resource.data.personal_info.pincode.matches('^\\\\d{6}$') &&\n                       request.resource.data.personal_info.state is string &&\n                       request.resource.data.professional_info is map &&\n                       request.resource.data.professional_info.keys().hasAll([\n                         'name_as_per_aadhar', 'mobile_linked_to_aadhar', 'education', 'company_name',\n                         'department', 'designation', 'date_of_joining', 'date_of_exit',\n                         'aadhar_number', 'pan_number', 'uan_number', 'esic_number'\n                       ]) &&\n                       request.resource.data.professional_info.name_as_per_aadhar is string &&\n                       request.resource.data.professional_info.mobile_linked_to_aadhar is string &&\n                       request.resource.data.professional_info.mobile_linked_to_aadhar.matches('^\\\\d{10}$') &&\n                       request.resource.data.professional_info.education is string &&\n                       request.resource.data.professional_info.company_name is string &&\n                       request.resource.data.professional_info.department is string &&\n                       request.resource.data.professional_info.designation is string &&\n                       request.resource.data.professional_info.date_of_joining is string &&\n                       request.resource.data.professional_info.date_of_exit is string &&\n                       request.resource.data.professional_info.aadhar_number is string &&\n                       request.resource.data.professional_info.aadhar_number.matches('^\\\\d{12}$') &&\n                       request.resource.data.professional_info.pan_number is string &&\n                       request.resource.data.professional_info.pan_number.matches('^[A-Z]{5}[0-9]{4}[A-Z]{1}$') &&\n                       request.resource.data.professional_info.uan_number is string &&\n                       (request.resource.data.professional_info.uan_number == '' ||\n                        request.resource.data.professional_info.uan_number.matches('^\\\\d{12}$')) &&\n                       request.resource.data.professional_info.esic_number is string &&\n                       (request.resource.data.professional_info.esic_number == '' ||\n                        request.resource.data.professional_info.esic_number.matches('^\\\\d{10}$')) &&\n                       request.resource.data.bank_info is map &&\n                       request.resource.data.bank_info.keys().hasAll([\n                         'bank_name', 'account_number', 'ifsc_code', 'branch_name'\n                       ]) &&\n                       request.resource.data.bank_info.bank_name is string &&\n                       request.resource.data.bank_info.account_number is string &&\n                       request.resource.data.bank_info.account_number.matches('^\\\\d{5,20}$') &&\n                       request.resource.data.bank_info.ifsc_code is string &&\n                       request.resource.data.bank_info.ifsc_code.matches('^[A-Z]{4}0[A-Z0-9]{6}$') &&\n                       request.resource.data.bank_info.branch_name is string;\n\n      allow update: if isAdmin() &&\n                       resource.data.user_id == request.auth.uid &&\n                       request.resource.data.user_id == resource.data.user_id &&\n                       request.resource.data.keys().hasAll([\n                         'personal_info', 'professional_info', 'bank_info', 'remarks',\n                         'created_at', 'verified', 'verified_by', 'documents', 'user_id'\n                       ]) &&\n                       request.resource.data.created_at is timestamp &&\n                       request.resource.data.verified is bool &&\n                       request.resource.data.verified_by is string &&\n                       request.resource.data.remarks is string &&\n                       request.resource.data.documents is list &&\n                       request.resource.data.personal_info is map &&\n                       request.resource.data.personal_info.keys().hasAll([\n                         'prefix', 'name', 'gender', 'marital_status', 'father_husband_name',\n                         'date_of_birth', 'age', 'email', 'phone', 'alternative_phone',\n                         'address', 'pincode', 'state'\n                       ]) &&\n                       request.resource.data.personal_info.prefix is string &&\n                       request.resource.data.personal_info.name is string &&\n                       request.resource.data.personal_info.gender is string &&\n                       request.resource.data.personal_info.marital_status is string &&\n                       request.resource.data.personal_info.father_husband_name is string &&\n                       request.resource.data.personal_info.date_of_birth is string &&\n                       request.resource.data.personal_info.age is string &&\n                       request.resource.data.personal_info.email is string &&\n                       request.resource.data.personal_info.email.matches('^[^@]+@[^@]+\\\\.[^@]+$') &&\n                       request.resource.data.personal_info.phone is string &&\n                       request.resource.data.personal_info.phone.matches('^\\\\d{10}$') &&\n                       request.resource.data.personal_info.alternative_phone is string &&\n                       (request.resource.data.personal_info.alternative_phone == '' ||\n                        request.resource.data.personal_info.alternative_phone.matches('^\\\\d{10}$')) &&\n                       request.resource.data.personal_info.address is string &&\n                       request.resource.data.personal_info.pincode is string &&\n                       request.resource.data.personal_info.pincode.matches('^\\\\d{6}$') &&\n                       request.resource.data.personal_info.state is string &&\n                       request.resource.data.professional_info is map &&\n                       request.resource.data.professional_info.keys().hasAll([\n                         'name_as_per_aadhar', 'mobile_linked_to_aadhar', 'education', 'company_name',\n                         'department', 'designation', 'date_of_joining', 'date_of_exit',\n                         'aadhar_number', 'pan_number', 'uan_number', 'esic_number'\n                       ]) &&\n                       request.resource.data.professional_info.name_as_per_aadhar is string &&\n                       request.resource.data.professional_info.mobile_linked_to_aadhar is string &&\n                       request.resource.data.professional_info.mobile_linked_to_aadhar.matches('^\\\\d{10}$') &&\n                       request.resource.data.professional_info.education is string &&\n                       request.resource.data.professional_info.company_name is string &&\n                       request.resource.data.professional_info.department is string &&\n                       request.resource.data.professional_info.designation is string &&\n                       request.resource.data.professional_info.date_of_joining is string &&\n                       request.resource.data.professional_info.date_of_exit is string &&\n                       request.resource.data.professional_info.aadhar_number is string &&\n                       request.resource.data.professional_info.aadhar_number.matches('^\\\\d{12}$') &&\n                       request.resource.data.professional_info.pan_number is string &&\n                       request.resource.data.professional_info.pan_number.matches('^[A-Z]{5}[0-9]{4}[A-Z]{1}$') &&\n                       request.resource.data.professional_info.uan_number is string &&\n                       (request.resource.data.professional_info.uan_number == '' ||\n                        request.resource.data.professional_info.uan_number.matches('^\\\\d{12}$')) &&\n                       request.resource.data.professional_info.esic_number is string &&\n                       (request.resource.data.professional_info.esic_number == '' ||\n                        request.resource.data.professional_info.esic_number.matches('^\\\\d{10}$')) &&\n                       request.resource.data.bank_info is map &&\n                       request.resource.data.bank_info.keys().hasAll([\n                         'bank_name', 'account_number', 'ifsc_code', 'branch_name'\n                       ]) &&\n                       request.resource.data.bank_info.bank_name is string &&\n                       request.resource.data.bank_info.account_number is string &&\n                       request.resource.data.bank_info.account_number.matches('^\\\\d{5,20}$') &&\n                       request.resource.data.bank_info.ifsc_code is string &&\n                       request.resource.data.bank_info.ifsc_code.matches('^[A-Z]{4}0[A-Z0-9]{6}$') &&\n                       request.resource.data.bank_info.branch_name is string;\n\n      allow read: if isAdmin() && \n                     resource.data.user_id == request.auth.uid && \n                     resource.data.verified == true;\n\n      allow read: if isSuperAdmin();\n\nallow update: if isAdmin() &&\n                   request.resource.data.diff(resource.data).changedKeys().hasOnly(['documents']) &&\n                   request.resource.data.documents is list &&\n                   request.resource.data.documents.size() <= 10 &&\n                   (request.resource.data.documents.size() == 0 ||\n                    request.resource.data.documents.all(doc, doc is string));\n\n      allow read: if isAdmin() &&\n                     request.query.where['verified'] == true &&\n                     'user_id' in request.query.where &&\n                     request.query.where['user_id'] == request.auth.uid &&\n                     request.query.orderBy.size() <= 2 &&\n                     ('created_at' in request.query.orderBy || '__name__' in request.query.orderBy) &&\n                     (request.query.limit <= 50);\n\n      allow read: if isSuperAdmin() &&\n                     request.query.where['verified'] == true &&\n                     request.query.orderBy.size() <= 2 &&\n                     ('created_at' in request.query.orderBy || '__name__' in request.query.orderBy) &&\n                     (request.query.limit <= 50);\n\n      allow update: if isSuperAdmin() &&\n                       request.resource.data.diff(resource.data).changedKeys().hasOnly(['documents']) &&\n                       request.resource.data.documents is list &&\n                       request.resource.data.documents.size() <= 10 &&\n                       (request.resource.data.documents.size() == 0 ||\n                        request.resource.data.documents.all(doc, doc is string));\n\n      allow update: if isSuperAdmin() &&\n                       request.resource.data.keys().hasAll([\n                         'personal_info', 'professional_info', 'bank_info', 'remarks',\n                         'created_at', 'verified', 'verified_by', 'documents', 'user_id'\n                       ]) &&\n                       request.resource.data.verified is bool &&\n                       request.resource.data.verified_by is string &&\n                       request.resource.data.remarks is string &&\n                       request.resource.data.documents is list &&\n                       request.resource.data.created_at is timestamp &&\n                       request.resource.data.user_id is string &&\n                       request.resource.data.personal_info is map &&\n                       request.resource.data.personal_info.keys().hasAll([\n                         'prefix', 'name', 'gender', 'marital_status', 'father_husband_name',\n                         'date_of_birth', 'age', 'email', 'phone', 'alternative_phone',\n                         'address', 'pincode', 'state'\n                       ]) &&\n                       request.resource.data.personal_info.prefix is string &&\n                       request.resource.data.personal_info.name is string &&\n                       request.resource.data.personal_info.gender is string &&\n                       request.resource.data.personal_info.marital_status is string &&\n                       request.resource.data.personal_info.father_husband_name is string &&\n                       request.resource.data.personal_info.date_of_birth is string &&\n                       request.resource.data.personal_info.age is string &&\n                       request.resource.data.personal_info.email is string &&\n                       request.resource.data.personal_info.email.matches('^[^@]+@[^@]+\\\\.[^@]+$') &&\n                       request.resource.data.personal_info.phone is string &&\n                       request.resource.data.personal_info.phone.matches('^\\\\d{10}$') &&\n                       request.resource.data.personal_info.alternative_phone is string &&\n                       (request.resource.data.personal_info.alternative_phone == '' ||\n                        request.resource.data.personal_info.alternative_phone.matches('^\\\\d{10}$')) &&\n                       request.resource.data.personal_info.address is string &&\n                       request.resource.data.personal_info.pincode is string &&\n                       request.resource.data.personal_info.pincode.matches('^\\\\d{6}$') &&\n                       request.resource.data.personal_info.state is string &&\n                       request.resource.data.professional_info is map &&\n                       request.resource.data.professional_info.keys().hasAll([\n                         'name_as_per_aadhar', 'mobile_linked_to_aadhar', 'education', 'company_name',\n                         'department', 'designation', 'date_of_joining', 'date_of_exit',\n                         'aadhar_number', 'pan_number', 'uan_number', 'esic_number'\n                       ]) &&\n                       request.resource.data.professional_info.name_as_per_aadhar is string &&\n                       request.resource.data.professional_info.mobile_linked_to_aadhar is string &&\n                       request.resource.data.professional_info.mobile_linked_to_aadhar.matches('^\\\\d{10}$') &&\n                       request.resource.data.professional_info.education is string &&\n                       request.resource.data.professional_info.company_name is string &&\n                       request.resource.data.professional_info.department is string &&\n                       request.resource.data.professional_info.designation is string &&\n                       request.resource.data.professional_info.date_of_joining is string &&\n                       request.resource.data.professional_info.date_of_exit is string &&\n                       request.resource.data.professional_info.aadhar_number is string &&\n                       request.resource.data.professional_info.aadhar_number.matches('^\\\\d{12}$') &&\n                       request.resource.data.professional_info.pan_number is string &&\n                       request.resource.data.professional_info.pan_number.matches('^[A-Z]{5}[0-9]{4}[A-Z]{1}$') &&\n                       request.resource.data.professional_info.uan_number is string &&\n                       (request.resource.data.professional_info.uan_number == '' ||\n                        request.resource.data.professional_info.uan_number.matches('^\\\\d{12}$')) &&\n                       request.resource.data.professional_info.esic_number is string &&\n                       (request.resource.data.professional_info.esic_number == '' ||\n                        request.resource.data.professional_info.esic_number.matches('^\\\\d{10}$')) &&\n                       request.resource.data.bank_info is map &&\n                       request.resource.data.bank_info.keys().hasAll([\n                         'bank_name', 'account_number', 'ifsc_code', 'branch_name'\n                       ]) &&\n                       request.resource.data.bank_info.bank_name is string &&\n                       request.resource.data.bank_info.account_number is string &&\n                       request.resource.data.bank_info.account_number.matches('^\\\\d{5,20}$') &&\n                       request.resource.data.bank_info.ifsc_code is string &&\n                       request.resource.data.bank_info.ifsc_code.matches('^[A-Z]{4}0[A-Z0-9]{6}$') &&\n                       request.resource.data.bank_info.branch_name is string;\n\n      allow delete: if false;\n    }\n\n    match /{document=**} {\n      allow read, write: if false;\n    }\n  }\n}"}]}}
[debug] [2025-05-28T08:39:16.112Z] May 28, 2025 8:39:16 AM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"May 28, 2025 8:39:16 AM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected non-HTTP/2 connection.\n"}}
[debug] [2025-05-28T08:39:16.690Z] May 28, 2025 8:39:16 AM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"May 28, 2025 8:39:16 AM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected HTTP/2 connection.\n"}}
[debug] [2025-05-28T08:39:23.779Z] <<< [apiv2][status] PUT http://127.0.0.1:8080/emulator/v1/projects/demo-app:securityRules 200
[debug] [2025-05-28T08:39:23.781Z] <<< [apiv2][body] PUT http://127.0.0.1:8080/emulator/v1/projects/demo-app:securityRules {"issues":[{"sourcePosition":{"fileName":"security.rules","line":225,"column":53,"currentOffset":15674,"endOffset":15676},"description":"Invalid function name: all.","severity":"WARNING"},{"sourcePosition":{"fileName":"security.rules","line":225,"column":57,"currentOffset":15678,"endOffset":15680},"description":"Invalid variable name: doc.","severity":"WARNING"},{"sourcePosition":{"fileName":"security.rules","line":225,"column":62,"currentOffset":15683,"endOffset":15685},"description":"Invalid variable name: doc.","severity":"WARNING"},{"sourcePosition":{"fileName":"security.rules","line":246,"column":57,"currentOffset":16868,"endOffset":16870},"description":"Invalid function name: all.","severity":"WARNING"},{"sourcePosition":{"fileName":"security.rules","line":246,"column":61,"currentOffset":16872,"endOffset":16874},"description":"Invalid variable name: doc.","severity":"WARNING"},{"sourcePosition":{"fileName":"security.rules","line":246,"column":66,"currentOffset":16877,"endOffset":16879},"description":"Invalid variable name: doc.","severity":"WARNING"}]}
[warn] ⚠  firestore.rules:225:53 - WARNING Invalid function name: all. 
[warn] ⚠  firestore.rules:225:57 - WARNING Invalid variable name: doc. 
[warn] ⚠  firestore.rules:225:62 - WARNING Invalid variable name: doc. 
[warn] ⚠  firestore.rules:246:57 - WARNING Invalid function name: all. 
[warn] ⚠  firestore.rules:246:61 - WARNING Invalid variable name: doc. 
[warn] ⚠  firestore.rules:246:66 - WARNING Invalid variable name: doc. 
[info] ✔  firestore: Rules updated. 
